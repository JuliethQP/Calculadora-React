{"version":3,"sources":["component/calculator.js","serviceWorker.js","index.js"],"names":["Calculadora","props","Cero","state","numeros","push","cero","console","log","pintar","Uno","uno","Dos","dos","Tres","tres","Cuatro","cuatro","Cinco","cinco","Seis","seis","Siete","siete","Ocho","ocho","Nueve","nueve","sumar","restar","multiplicar","dividir","Punto","Igual","i","length","Number","parseInt","setState","resultado","eval","join","letras","cleaner","num","array","className","this","role","aria-label","class","type","onClick","width","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ced9f5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './estilos.css'\r\n\r\nclass Calculadora extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cero: 0,\r\n            uno: 1,\r\n            dos: 2,\r\n            tres: 3,\r\n            cuatro: 4,\r\n            cinco: 5,\r\n            seis: 6,\r\n            siete: 7,\r\n            ocho: 8,\r\n            nueve: 9,\r\n            numeros: [],\r\n            num: 0,\r\n            array: [],\r\n            resultado: 0,\r\n            letras: [0],\r\n        }\r\n    }\r\n    Cero = () => {\r\n        this.state.numeros.push(this.state.cero)\r\n        console.log(this.state.numeros)\r\n        this.pintar();\r\n    }\r\n    Uno = () => {\r\n        this.state.numeros.push(this.state.uno)\r\n        this.pintar();\r\n    }\r\n    Dos = () => {\r\n        this.state.numeros.push(this.state.dos)\r\n        this.pintar();\r\n    }\r\n    Tres = () => {\r\n        this.state.numeros.push(this.state.tres)\r\n        this.pintar();\r\n    }\r\n    Cuatro = () => {\r\n        this.state.numeros.push(this.state.cuatro)\r\n        this.pintar();\r\n    }\r\n    Cinco = () => {\r\n        this.state.numeros.push(this.state.cinco)\r\n        this.pintar();\r\n    }\r\n    Seis = () => {\r\n        this.state.numeros.push(this.state.seis)\r\n        this.pintar();\r\n    }\r\n    Siete = () => {\r\n        this.state.numeros.push(this.state.siete)\r\n        this.pintar();\r\n    }\r\n    Ocho = () => {\r\n        this.state.numeros.push(this.state.ocho)\r\n        this.pintar();\r\n    }\r\n    Nueve = () => {\r\n        this.state.numeros.push(this.state.nueve)\r\n        this.pintar();\r\n    }\r\n    sumar = () => {\r\n        this.state.numeros.push(\"+\")\r\n        this.pintar();\r\n    }\r\n    restar = () => {\r\n        this.state.numeros.push(\"-\")\r\n        this.pintar();\r\n    }\r\n    multiplicar = () => {\r\n        this.state.numeros.push(\"*\")\r\n        this.pintar();\r\n    }\r\n    dividir = () => {\r\n        this.state.numeros.push(\"/\")\r\n        this.pintar();\r\n    }\r\n    Punto = () => {\r\n        this.state.numeros.push(\".\")\r\n        this.pintar();\r\n    }\r\n    Igual = () => {   \r\n        for (let i = 0; i < this.state.numeros.length; i++) {\r\n            if (this.state.numeros == Number) {\r\n                console.log(\"hola\")\r\n                this.state.numeros[i] = (parseInt(this.state.numeros[i]))\r\n            }\r\n        }     \r\n        this.setState({\r\n            resultado: (eval(this.state.numeros.join('')))\r\n        })   \r\n    }\r\n    pintar = () => {\r\n        this.setState({\r\n            letras: this.state.numeros.join('')\r\n        })\r\n        console.log(this.state.letras)\r\n    }\r\n    cleaner = () => {\r\n        return (\r\n            this.setState({\r\n                resultado: 0,\r\n                numeros: [],\r\n                letras: 0,\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card container justify-content-center contenedor \">\r\n                <div className=\"card container  pantalla letras mt-2\">\r\n                    <h4 className=\"text-black\">{this.state.resultado}</h4>\r\n                    <div>  <h4 className=\"text-black\">{this.state.letras} </h4> </div>\r\n                </div>\r\n                <div className=\"container mx-0 ml-3 mt-3\">\r\n                    <div className=\"btn-toolbar \" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                        <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1\" onClick={this.Cero} > {this.state.cero} </button>\r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1\" onClick={this.Uno} > {this.state.uno} </button>\r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1\" onClick={this.Dos}> {this.state.dos} </button>\r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1\" onClick={this.Tres}> {this.state.tres} </button>\r\n                            <button type=\"button\" class=\"btn btn  btn-light mx-1 my-1  \" width=\"150\" onClick={this.multiplicar}> * </button>\r\n                            \r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1 \" onClick={this.sumar}> + </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"btn-toolbar  \" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"First group\">\r\n                            <button type=\"button\" class=\"btn  btn-light mx-1 my-1\" onClick={this.Cuatro}> {this.state.cuatro} </button>\r\n                            <button type=\"button\" class=\"btn  btn-light mx-1 my-1\" onClick={this.Cinco}> {this.state.cinco} </button>\r\n                            <button type=\"button\" class=\"btn  btn-light mx-1 my-1 \" onClick={this.Seis}> {this.state.seis} </button>\r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1\" onClick={this.Siete}> {this.state.siete} </button>\r\n                            <button type=\"button\" class=\"btn  btn-light mx-1 my-1  \" onClick={this.restar}>- </button>\r\n                            <button type=\"button\" class=\"btn btn  btn-light mx-1 my-1\" onClick={this.dividir}> /  </button>\r\n    \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"btn-toolbar \" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"First group\">\r\n                            <button type=\"button\" class=\"btn btn  btn-light mx-1 my-1\" onClick={this.Ocho}> {this.state.ocho} </button>\r\n                            <button type=\"button\" class=\"btn btn  btn-light mx-1 my-1\" onClick={this.Nueve}> {this.state.nueve} </button>\r\n                            <button type=\"button\" class=\"btn btn-light mx-1 my-1\" onClick={this.Punto}> . </button>\r\n                            <button type=\"button\" class=\"btn btn  btn-light mx-2 my-1\" onClick={this.Igual}> = </button>\r\n                            <button type=\"button\" class=\"btn btn  btn-light mx-1 my-1 btn-block\" onClick={this.cleaner} > AC </button>\r\n             \r\n        \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculadora;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculadora from './component/calculator'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculadora />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}